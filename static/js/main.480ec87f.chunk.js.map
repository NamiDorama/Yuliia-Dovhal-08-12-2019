{"version":3,"sources":["store/actions.js","store/reducers.js","api/restConfig.js","api/apiFetch.js","store/sagas.js","store/configureStore.js","components/Header.js","components/WeatherIcon.js","components/DayWeatherCard.js","components/Favorites.js","components/WeatherCards.js","utils/utils.js","pages/FavoritesPages.js","containers/SearchCityWeather.js","containers/WeatherBlock.js","pages/MainPage.js","pages/NotFound.js","App.js","serviceWorker.js","index.js","css_sprites.png"],"names":["GET_AUTOCOMPLETE","GET_WEATHER","GET_FAVOURITES_WEATHER","GET_CITY_BY_GEOLOCATION","getAutocompleteSuccess","options","type","getWeather","selectedOption","getWeatherSuccess","weather","getFiveDaysWeatherSuccess","getFavoritesWeatherSuccess","favoritesWeather","setError","error","setCity","city","initialState","fiveDaysWeather","currentCity","request","url","fetch","then","response","json","data","Message","Promise","reject","resolve","BASE_URL","API_KEY","getAutocompleteFetch","params","getWeatherFetch","locationKey","getFavoriteWeatherFetch","getFiveDaysWeatherFetch","metric","getCityByGeolocationFetch","location","latitude","longitude","getAutocompleteSaga","getWeatherSaga","getWeatherByGeolocationSaga","getFavoritesWeatherSaga","watchAllSagas","put","Key","favorites","all","map","key","reduce","acc","el","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","state","action","DailyForecasts","applyMiddleware","run","HomeLink","React","forwardRef","props","ref","to","exact","FavoritesLink","Header","withStyles","grow","flexGrow","active","border","classes","AppBar","position","color","Toolbar","Typography","variant","className","Button","component","activeClassName","style","width","height","background","sprite","WeatherIcon","iconNum","DayWeatherCardComp","header","body","footer","Grid","item","md","sm","xs","Card","cardItem","align","DayWeatherCard","display","flexDirection","alignItems","justifyContent","defaultProps","Favorites","favorite","favoritesHandler","IconButton","onClick","WeatherCards","weatherArr","container","justify","spacing","margin","length","days","getWeekDay","date","Date","getDay","checkIfCitySaved","cityKey","filter","createWeatherArr","favourites","saved","Temperature","Metric","Value","Unit","WeatherText","EpochDate","Day","IconPhrase","Minimum","Maximum","mapDispatchToProps","getFavoritesWeather","FavoritesPages","connect","root","backgroundColor","padding","JSON","parse","localStorage","getItem","useEffect","Object","keys","getAutocomplete","SearchCityWeather","icon","marginRight","useState","inputValue","setInputValue","setSelectedOption","handleSearch","value","target","Autocomplete","id","disableClearable","freeSolo","getOptionLabel","option","LocalizedName","renderInput","TextField","label","onChange","renderOption","size","disabled","defaultCity","Version","Type","Rank","Country","ID","AdministrativeArea","getCityByGeolocation","WeatherBlock","weatherBlock","ifCitySaved","setFavorite","updatedCities","setItem","stringify","MainPage","setLocation","navigator","geolocation","getCurrentPosition","coords","getCurrentLocation","message","toast","POSITION","BOTTOM_LEFT","autoClose","NotFound","direction","href","App","basename","path","Boolean","hostname","match","Root","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.480ec87f.chunk.js","sourcesContent":["export const GET_AUTOCOMPLETE = 'GET_AUTOCOMPLETE';\r\nexport const GET_AUTOCOMPLETE_SUCCESS = 'GET_AUTOCOMPLETE_SUCCESS';\r\n\r\nexport const GET_WEATHER = 'GET_WEATHER';\r\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\r\n\r\nexport const GET_FAVOURITES_WEATHER = 'GET_FAVOURITES_WEATHER';\r\nexport const GET_FAVOURITES_WEATHER_SUCCESS = 'GET_FAVOURITES_WEATHER_SUCCESS';\r\n\r\nexport const GET_CITY_BY_GEOLOCATION = 'GET_CITY_BY_GEOLOCATION';\r\nexport const GET_FIVE_DAYS_WEATHER_SUCCESS = 'GET_FIVE_DAYS_WEATHER_SUCCESS';\r\nexport const SET_CITY = 'SET_CITY';\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\nexport const getAutocomplete = params => ({ type: GET_AUTOCOMPLETE, params });\r\nexport const getAutocompleteSuccess = options => ({\r\n  type: GET_AUTOCOMPLETE_SUCCESS,\r\n  options,\r\n});\r\n\r\nexport const getWeather = selectedOption => ({\r\n  type: GET_WEATHER,\r\n  selectedOption,\r\n});\r\nexport const getWeatherSuccess = weather => ({\r\n  type: GET_WEATHER_SUCCESS,\r\n  weather,\r\n});\r\n\r\nexport const getFiveDaysWeatherSuccess = weather => ({\r\n  type: GET_FIVE_DAYS_WEATHER_SUCCESS,\r\n  weather,\r\n});\r\n\r\nexport const getFavoritesWeather = favorites => ({\r\n  type: GET_FAVOURITES_WEATHER,\r\n  favorites,\r\n});\r\nexport const getFavoritesWeatherSuccess = favoritesWeather => ({\r\n  type: GET_FAVOURITES_WEATHER_SUCCESS,\r\n  favoritesWeather,\r\n});\r\n\r\nexport const getCityByGeolocation = location => ({\r\n  type: GET_CITY_BY_GEOLOCATION,\r\n  location,\r\n});\r\n\r\nexport const setError = error => ({ type: SET_ERROR, error });\r\nexport const setCity = city => ({ type: SET_CITY, city });\r\n","import {\r\n  GET_AUTOCOMPLETE_SUCCESS,\r\n  GET_FIVE_DAYS_WEATHER_SUCCESS,\r\n  GET_WEATHER_SUCCESS,\r\n  SET_CITY,\r\n  SET_ERROR,\r\n  GET_FAVOURITES_WEATHER_SUCCESS,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  options: [],\r\n  weather: {},\r\n  fiveDaysWeather: [],\r\n  currentCity: {},\r\n  favoritesWeather: {},\r\n  error: '',\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_AUTOCOMPLETE_SUCCESS:\r\n      return { ...state, options: action.options, error: '' };\r\n    case GET_WEATHER_SUCCESS:\r\n      return { ...state, weather: action.weather[0], error: '' };\r\n    case GET_FIVE_DAYS_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fiveDaysWeather: action.weather.DailyForecasts,\r\n        error: '',\r\n      };\r\n    case GET_FAVOURITES_WEATHER_SUCCESS:\r\n      return { ...state, favoritesWeather: action.favoritesWeather };\r\n    case SET_CITY:\r\n      return { ...state, currentCity: action.city };\r\n    case SET_ERROR:\r\n      return { ...state, error: action.error };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","export const request = url => {\r\n  return fetch(`${url}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.Message) {\r\n        return Promise.reject(data.Message);\r\n      }\r\n      return Promise.resolve(data);\r\n    });\r\n};\r\n","import { request } from './restConfig';\r\n\r\nconst BASE_URL = 'https://dataservice.accuweather.com';\r\nconst API_KEY = 'ta7ZxTcUUDLJet2gTHpzoKkqe7EHwDR3';\r\n\r\nexport const getAutocompleteFetch = params => {\r\n  return request(\r\n    `${BASE_URL}/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${params}`,\r\n  );\r\n};\r\n\r\nexport const getWeatherFetch = locationKey => {\r\n  return request(\r\n    `${BASE_URL}/currentconditions/v1/${locationKey}?apikey=${API_KEY}`,\r\n  );\r\n};\r\n\r\nexport const getFavoriteWeatherFetch = locationKey => {\r\n  return request(\r\n    `${BASE_URL}/currentconditions/v1/${locationKey}?apikey=${API_KEY}`,\r\n  ).then(weather => ({ [locationKey]: weather[0] }));\r\n};\r\n\r\nexport const getFiveDaysWeatherFetch = (locationKey, metric = true) => {\r\n  return request(\r\n    `${BASE_URL}/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}&metric=${metric}`,\r\n  );\r\n};\r\n\r\nexport const getCityByGeolocationFetch = location => {\r\n  return request(\r\n    `${BASE_URL}/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${location.latitude},${location.longitude}`,\r\n  );\r\n};\r\n","import { put, all, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  GET_AUTOCOMPLETE,\r\n  GET_WEATHER,\r\n  getAutocompleteSuccess,\r\n  getWeatherSuccess,\r\n  setError,\r\n  setCity,\r\n  getFiveDaysWeatherSuccess,\r\n  GET_FAVOURITES_WEATHER,\r\n  getFavoritesWeatherSuccess,\r\n  GET_CITY_BY_GEOLOCATION,\r\n} from './actions';\r\nimport {\r\n  getAutocompleteFetch,\r\n  getWeatherFetch,\r\n  getFiveDaysWeatherFetch,\r\n  getFavoriteWeatherFetch,\r\n  getCityByGeolocationFetch,\r\n} from '../api/apiFetch';\r\n\r\nexport function* getAutocompleteSaga({ params }) {\r\n  try {\r\n    const options = params ? yield getAutocompleteFetch(params) : [];\r\n    yield put(getAutocompleteSuccess(options));\r\n  } catch (err) {\r\n    yield put(setError('Sorry, something went wrong in autocomplete'));\r\n  }\r\n}\r\n\r\nexport function* getWeatherSaga({ selectedOption }) {\r\n  try {\r\n    const weather = yield getWeatherFetch(selectedOption.Key);\r\n    const fiveDaysWeather = yield getFiveDaysWeatherFetch(selectedOption.Key);\r\n    yield put(getWeatherSuccess(weather));\r\n    yield put(getFiveDaysWeatherSuccess(fiveDaysWeather));\r\n    yield put(setCity(selectedOption));\r\n  } catch (err) {\r\n    yield put(setError('Sorry, something went wrong in getting weather'));\r\n  }\r\n}\r\n\r\nexport function* getWeatherByGeolocationSaga({ location }) {\r\n  try {\r\n    const city = yield getCityByGeolocationFetch(location);\r\n    yield getWeatherSaga({ selectedOption: city });\r\n  } catch (err) {\r\n    yield put(\r\n      setError('Sorry, something went wrong in getting weather by geolocation'),\r\n    );\r\n  }\r\n}\r\n\r\nexport function* getFavoritesWeatherSaga({ favorites }) {\r\n  try {\r\n    const weather = yield all(\r\n      favorites.map(city => getFavoriteWeatherFetch(city.key)),\r\n    );\r\n    const favoritesWeather = yield weather.reduce((acc, el) => {\r\n      return { ...acc, ...el };\r\n    }, {});\r\n    yield put(getFavoritesWeatherSuccess(favoritesWeather));\r\n  } catch (err) {\r\n    yield put(\r\n      setError(\r\n        'Sorry, something went wrong in getting weather for favorites cities',\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nexport function* watchAllSagas() {\r\n  yield all([\r\n    takeEvery(GET_AUTOCOMPLETE, getAutocompleteSaga),\r\n    takeEvery(GET_WEATHER, getWeatherSaga),\r\n    takeEvery(GET_FAVOURITES_WEATHER, getFavoritesWeatherSaga),\r\n    takeEvery(GET_CITY_BY_GEOLOCATION, getWeatherByGeolocationSaga),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { reducer } from './reducers';\r\nimport { watchAllSagas } from './sagas';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(watchAllSagas);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  active: {\r\n    border: '1px solid grey',\r\n  },\r\n};\r\n\r\nconst HomeLink = React.forwardRef((props, ref) => (\r\n  <NavLink to=\"/\" exact={true} {...props} ref={ref} />\r\n));\r\nconst FavoritesLink = React.forwardRef((props, ref) => (\r\n  <NavLink to=\"/favorites\" {...props} ref={ref} />\r\n));\r\n\r\nconst HeaderComp = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <AppBar position=\"static\" color=\"default\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          Weather application\r\n        </Typography>\r\n        <Button\r\n          component={HomeLink}\r\n          color=\"inherit\"\r\n          activeClassName={classes.active}\r\n        >\r\n          Home\r\n        </Button>\r\n        <Button\r\n          component={FavoritesLink}\r\n          color=\"inherit\"\r\n          activeClassName={classes.active}\r\n        >\r\n          Favorites\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport const Header = withStyles(styles)(HeaderComp);\r\n\r\nHeaderComp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport sprite from '../css_sprites.png';\r\n\r\nconst style = {\r\n  'bg-1_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -10px`,\r\n  },\r\n  'bg-2_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -10px`,\r\n  },\r\n  'bg-3_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -75px`,\r\n  },\r\n  'bg-4_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -75px`,\r\n  },\r\n  'bg-5_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -10px`,\r\n  },\r\n  'bg-6_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -75px`,\r\n  },\r\n  'bg-7_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -140px`,\r\n  },\r\n  'bg-8_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -140px`,\r\n  },\r\n  'bg-11_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -140px`,\r\n  },\r\n  'bg-12_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -205px`,\r\n  },\r\n  'bg-13_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -205px`,\r\n  },\r\n  'bg-14_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -205px`,\r\n  },\r\n  'bg-15_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -10px`,\r\n  },\r\n  'bg-16_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -75px`,\r\n  },\r\n  'bg-17_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -140px`,\r\n  },\r\n  'bg-18_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -205px`,\r\n  },\r\n  'bg-19_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -270px`,\r\n  },\r\n  'bg-20_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -270px`,\r\n  },\r\n  'bg-21_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -270px`,\r\n  },\r\n  'bg-22_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -270px`,\r\n  },\r\n  'bg-23_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -10px`,\r\n  },\r\n  'bg-24_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -75px`,\r\n  },\r\n  'bg-25_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -140px`,\r\n  },\r\n  'bg-26_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -205px`,\r\n  },\r\n  'bg-29_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -270px`,\r\n  },\r\n  'bg-30_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -335px`,\r\n  },\r\n  'bg-31_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -335px`,\r\n  },\r\n  'bg-32_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -335px`,\r\n  },\r\n  'bg-33_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -335px`,\r\n  },\r\n  'bg-34_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -335px`,\r\n  },\r\n  'bg-35_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -10px -400px`,\r\n  },\r\n  'bg-36_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -105px -400px`,\r\n  },\r\n  'bg-37_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -200px -400px`,\r\n  },\r\n  'bg-38_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -295px -400px`,\r\n  },\r\n  'bg-39_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -390px -400px`,\r\n  },\r\n  'bg-40_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -485px -10px`,\r\n  },\r\n  'bg-41_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -485px -75px`,\r\n  },\r\n  'bg-42_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -485px -140px`,\r\n  },\r\n  'bg-43_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -485px -205px`,\r\n  },\r\n  'bg-44_s': {\r\n    width: '75px',\r\n    height: '45px',\r\n    background: `url(${sprite}) -485px -270px`,\r\n  },\r\n};\r\n\r\nconst WeatherIconComp = ({ classes, iconNum }) => (\r\n  <Typography component=\"div\" className={classes[`bg-${iconNum}_s`]} />\r\n);\r\n\r\nexport const WeatherIcon = withStyles(style)(WeatherIconComp);\r\n\r\nWeatherIconComp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  iconNum: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { WeatherIcon } from './WeatherIcon';\r\n\r\nconst style = {\r\n  cardItem: {\r\n    height: '120px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n};\r\n\r\nconst DayWeatherCardComp = ({\r\n  weather: { header, body, footer, iconNum },\r\n  classes,\r\n}) => {\r\n  return (\r\n    <Grid item md={2} sm={4} xs={12}>\r\n      <Card className={classes.cardItem}>\r\n        {iconNum && <WeatherIcon iconNum={iconNum} />}\r\n        <Typography component=\"p\" align=\"center\" variant=\"body2\">\r\n          {header}\r\n        </Typography>\r\n        <Typography\r\n          component=\"p\"\r\n          align=\"center\"\r\n          variant=\"subtitle2\"\r\n          color=\"primary\"\r\n        >\r\n          {body}\r\n        </Typography>\r\n        <Typography component=\"p\" align=\"center\">\r\n          {footer}\r\n        </Typography>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const DayWeatherCard = withStyles(style)(DayWeatherCardComp);\r\n\r\nDayWeatherCardComp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  header: PropTypes.string,\r\n  body: PropTypes.string,\r\n  footer: PropTypes.string,\r\n  iconNum: PropTypes.oneOf([PropTypes.number, null]),\r\n};\r\n\r\nDayWeatherCardComp.defaultProps = {\r\n  header: '',\r\n  body: '',\r\n  footer: '',\r\n  iconNum: null,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nexport const Favorites = ({ favorite, favoritesHandler }) => (\r\n  <Grid item sm={4} xs={6} align=\"right\">\r\n    <IconButton\r\n      color={favorite ? 'secondary' : 'default'}\r\n      onClick={favoritesHandler}\r\n    >\r\n      <FavoriteIcon />\r\n    </IconButton>\r\n    <Typography component=\"span\" variant=\"subtitle1\">\r\n      Favorites\r\n    </Typography>\r\n  </Grid>\r\n);\r\n\r\nFavorites.propTypes = {\r\n  favorite: PropTypes.bool.isRequired,\r\n  favoritesHandler: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DayWeatherCard } from './index';\r\n\r\nexport const WeatherCards = ({ weatherArr }) => (\r\n  <Grid\r\n    container\r\n    justify=\"center\"\r\n    alignItems=\"flex-start\"\r\n    spacing={2}\r\n    style={{ margin: '40px 0' }}\r\n  >\r\n    {weatherArr.length\r\n      ? weatherArr.map(weather =>\r\n          weather.key ? (\r\n            <DayWeatherCard weather={weather} key={weather.key} />\r\n          ) : null,\r\n        )\r\n      : null}\r\n  </Grid>\r\n);\r\n\r\nWeatherCards.propTypes = {\r\n  weatherArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","const days = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n\r\nexport const getWeekDay = date => days[new Date(date).getDay()];\r\n\r\nexport const checkIfCitySaved = (favorites, cityKey) =>\r\n  !!favorites.filter(el => el.key === cityKey).length;\r\n\r\nexport const createWeatherArr = (weatherArr, favourites = false) => {\r\n  if (favourites) {\r\n    return weatherArr.map(saved => {\r\n      const weather = favourites[saved.key];\r\n      return weather\r\n        ? {\r\n            key: saved.key,\r\n            header: saved.city,\r\n            body: `${weather.Temperature.Metric.Value}${weather.Temperature.Metric.Unit}`,\r\n            footer: weather.WeatherText,\r\n            iconNum: weather.WeatherIcon,\r\n          }\r\n        : {};\r\n    });\r\n  }\r\n  return weatherArr.map(weather => ({\r\n    key: weather.EpochDate,\r\n    header: getWeekDay(weather.Date),\r\n    body: weather.Day.IconPhrase,\r\n    footer: `${weather.Temperature.Minimum.Value}${weather.Temperature.Minimum.Unit} / ${weather.Temperature.Maximum.Value}${weather.Temperature.Maximum.Unit}`,\r\n  }));\r\n};\r\n\r\nexport const getCurrentLocation = setLocation => {\r\n  const location = window.navigator && window.navigator.geolocation;\r\n  if (location) {\r\n    location.getCurrentPosition(\r\n      position => {\r\n        setLocation({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        });\r\n      },\r\n      () => {\r\n        setLocation({ latitude: null, longitude: null });\r\n      },\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Header, WeatherCards } from '../components';\r\nimport { getFavoritesWeather } from '../store/actions';\r\nimport { createWeatherArr } from '../utils/utils';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst style = {\r\n  root: {\r\n    backgroundColor: 'whitesmoke',\r\n    padding: '15px',\r\n    width: '90%',\r\n    margin: '20px auto',\r\n  },\r\n};\r\n\r\nconst FavoritesPagesComp = props => {\r\n  const { getFavoritesWeather, favoritesWeather, classes } = props;\r\n  const favorites = JSON.parse(window.localStorage.getItem('cities')) || [];\r\n\r\n  useEffect(() => {\r\n    getFavoritesWeather(favorites);\r\n  }, []);\r\n\r\n  const weatherArr = Object.keys(favoritesWeather).length\r\n    ? createWeatherArr(favorites, favoritesWeather)\r\n    : [];\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Card className={classes.root}>\r\n        {weatherArr.length ? (\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <WeatherCards weatherArr={weatherArr} />\r\n          </Grid>\r\n        ) : (\r\n          <Typography align=\"center\" variant=\"subtitle1\">\r\n            There's no favorite cities here\r\n          </Typography>\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ favoritesWeather }) => ({ favoritesWeather });\r\nconst mapDispatchToProps = { getFavoritesWeather };\r\n\r\nexport const FavoritesPages = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withStyles(style)(FavoritesPagesComp));\r\n\r\nFavoritesPagesComp.propTypes = {\r\n  getFavoritesWeather: PropTypes.func.isRequired,\r\n  favoritesWeather: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getAutocomplete, getWeather } from '../store/actions';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst styles = {\r\n  root: {\r\n    margin: '20px 0',\r\n  },\r\n  icon: {\r\n    color: 'grey',\r\n    marginRight: '5px',\r\n  },\r\n  margin: {\r\n    margin: '10px 0 10px 10px',\r\n  },\r\n  width: {\r\n    width: '300px',\r\n  },\r\n};\r\n\r\nconst SearchFieldComp = props => {\r\n  const { classes, options, getAutocomplete, getWeather } = props;\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selectedOption, setSelectedOption] = useState({});\r\n\r\n  const handleSearch = ({ target: { value } }) => {\r\n    setSelectedOption({});\r\n    setInputValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputValue) {\r\n      getAutocomplete(inputValue);\r\n    }\r\n  }, [inputValue]);\r\n\r\n  const getOptions = option => (\r\n    <Grid container alignItems=\"center\">\r\n      <Grid item>\r\n        <LocationOnIcon className={classes.icon} />\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Typography color=\"textSecondary\">{option.LocalizedName}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const getOptionLabel = option => option.LocalizedName;\r\n\r\n  const selectOptionHandler = ({}, option) => {\r\n    setInputValue(option.LocalizedName);\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const renderInput = params => (\r\n    <TextField\r\n      {...params}\r\n      label=\"Search city\"\r\n      variant=\"outlined\"\r\n      onChange={handleSearch}\r\n      className={classes.width}\r\n    />\r\n  );\r\n\r\n  const searchWeatherHandler = () => {\r\n    getWeather(selectedOption);\r\n    setInputValue('');\r\n    setSelectedOption({});\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Autocomplete\r\n        id=\"autocomplete-search\"\r\n        options={options}\r\n        disableClearable\r\n        freeSolo\r\n        getOptionLabel={getOptionLabel}\r\n        renderInput={renderInput}\r\n        renderOption={getOptions}\r\n        inputValue={inputValue}\r\n        onChange={selectOptionHandler}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        className={classes.margin}\r\n        onClick={searchWeatherHandler}\r\n        disabled={!Object.keys(selectedOption).length}\r\n      >\r\n        Get weather\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  options: state.options,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAutocomplete,\r\n  getWeather,\r\n};\r\n\r\nexport const SearchCityWeather = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withStyles(styles)(SearchFieldComp));\r\n\r\nSearchFieldComp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  getAutocomplete: PropTypes.func.isRequired,\r\n  getWeather: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Favorites, WeatherCards, WeatherIcon } from '../components';\r\nimport { getWeather, getCityByGeolocation } from '../store/actions';\r\nimport { checkIfCitySaved, createWeatherArr } from '../utils/utils';\r\n\r\nconst defaultCity = {\r\n  Version: 1,\r\n  Key: '215854',\r\n  Type: 'City',\r\n  Rank: 31,\r\n  LocalizedName: 'Tel Aviv',\r\n  Country: { ID: 'IL', LocalizedName: 'Israel' },\r\n  AdministrativeArea: { ID: 'TA', LocalizedName: 'Tel Aviv' },\r\n};\r\n\r\nconst style = {\r\n  root: {\r\n    backgroundColor: 'whitesmoke',\r\n    padding: '15px',\r\n    width: '90%',\r\n    margin: '20px auto',\r\n  },\r\n  weatherBlock: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nconst WeatherBlockComp = props => {\r\n  const {\r\n    classes,\r\n    weather,\r\n    getWeather,\r\n    currentCity,\r\n    fiveDaysWeather,\r\n    location,\r\n    getCityByGeolocation,\r\n  } = props;\r\n  const favorites = JSON.parse(window.localStorage.getItem('cities')) || [];\r\n  const ifCitySaved = checkIfCitySaved(favorites, currentCity.Key);\r\n  const weatherArr = createWeatherArr(fiveDaysWeather);\r\n  const [favorite, setFavorite] = useState(ifCitySaved);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(currentCity).length) {\r\n      getWeather(currentCity);\r\n      return;\r\n    }\r\n    getWeather(defaultCity);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.latitude && location.longitude) {\r\n      getCityByGeolocation(location);\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setFavorite(checkIfCitySaved(favorites, currentCity.Key));\r\n  }, [currentCity.Key, favorites]);\r\n\r\n  const favoritesHandler = () => {\r\n    setFavorite(!ifCitySaved);\r\n    const updatedCities = ifCitySaved\r\n      ? favorites.filter(el => el.key !== currentCity.Key)\r\n      : [\r\n          ...favorites,\r\n          { city: currentCity.LocalizedName, key: currentCity.Key },\r\n        ];\r\n    window.localStorage.setItem('cities', JSON.stringify(updatedCities));\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item sm={8} xs={6} className={classes.weatherBlock}>\r\n          {weather.WeatherIcon && (\r\n            <Grid item>\r\n              <WeatherIcon iconNum={weather.WeatherIcon} />\r\n            </Grid>\r\n          )}\r\n          <Grid item>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {currentCity.LocalizedName}\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              {weather.Temperature && weather.Temperature.Metric.Value}\r\n              {weather.Temperature && weather.Temperature.Metric.Unit}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Favorites favorite={favorite} favoritesHandler={favoritesHandler} />\r\n\r\n        <Grid item xs={12}>\r\n          <Typography component=\"p\" variant=\"h5\" align=\"center\">\r\n            {weather.WeatherText}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <WeatherCards weatherArr={weatherArr} />\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ weather, currentCity, fiveDaysWeather }) => ({\r\n  weather,\r\n  currentCity,\r\n  fiveDaysWeather,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getWeather,\r\n  getCityByGeolocation,\r\n};\r\n\r\nexport const WeatherBlock = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withStyles(style)(WeatherBlockComp));\r\n\r\nWeatherBlockComp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  weather: PropTypes.object.isRequired,\r\n  getWeather: PropTypes.func.isRequired,\r\n  currentCity: PropTypes.object.isRequired,\r\n  fiveDaysWeather: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  getCityByGeolocation: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { SearchCityWeather, WeatherBlock } from '../containers';\r\nimport { Header } from '../components';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getCurrentLocation } from '../utils/utils';\r\n\r\nconst MainPageComp = ({ error }) => {\r\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\r\n\r\n  const notify = message => {\r\n    toast.error(message, {\r\n      position: toast.POSITION.BOTTOM_LEFT,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentLocation(setLocation);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      notify(error);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={5000} />\r\n      <Header />\r\n      <SearchCityWeather />\r\n      <WeatherBlock location={location} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.error,\r\n});\r\n\r\nexport const MainPage = connect(mapStateToProps)(MainPageComp);\r\n\r\nMainPageComp.propTypes = {\r\n  error: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst style = {\r\n  margin: {\r\n    margin: '20px 0',\r\n  },\r\n};\r\n\r\nconst NotFoundComp = ({ classes }) => (\r\n  <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n    <Typography variant=\"h5\" className={classes.margin}>\r\n      Sorry, this page is not found\r\n    </Typography>\r\n    <Button href=\"/\" variant=\"outlined\" className={classes.margin}>\r\n      Go to home page\r\n    </Button>\r\n  </Grid>\r\n);\r\n\r\nexport const NotFound = withStyles(style)(NotFoundComp);\r\n\r\nNotFoundComp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport { FavoritesPages, MainPage, NotFound } from './pages';\r\n\r\nconst App = () => (\r\n  <HashRouter basename=\"/\">\r\n    <Switch>\r\n      <Route path=\"/\" exact component={MainPage} />\r\n      <Route path=\"/favorites\" exact component={FavoritesPages} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/configureStore';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst Root = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(Root, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/css_sprites.062925ff.png\";"],"sourceRoot":""}